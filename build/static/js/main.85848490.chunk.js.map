{"version":3,"sources":["components/BottomBtns.js","components/WrapperName.js","components/ProfileName.js","components/Profile/SocialLinks.js","components/Profile/Info.js","components/Profile/ProfileData.js","components/SearchInput.js","components/Profile.js","components/Follow/FollowProfile.js","components/Follow/List.js","components/FollowList.js","API/ProfileAPI.js","API/FollowAPI.js","App.js","reportWebVitals.js","index.js"],"names":["BottomBtns","data","useContext","ProfileContext","className","target","href","html_url","rel","WrapperName","prop","children","ProfileName","src","avatar_url","alt","name","to","login","followers","following","SocialLinks","Provider","value","size","location","twitter_username","blog","Info","bio","ProfileData","SearchInput","props","user","useParams","defaultInput","undefined","useState","btn","setBtn","input","setInput","onChange","e","placeholder","onClick","searchClick","Profile","profileInputState","FollowProfile","url","List","title","apiData","FollowerContext","FollowingContext","profileData","map","element","id","FollowList","a","fetch","res","json","FollowAPI","swtich","React","createContext","App","apiProfileData","setProfileData","apiFollowerData","setFollowerData","apiFollowingData","setFollowingData","handleClick","useEffect","ProfileAPI","then","catch","err","console","error","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85848490.chunk.js","sourcesContent":["import { ProfileContext } from \"../App\";\nimport { useContext } from \"react\";\n\nconst BottomBtns = () => {\n  const data = useContext(ProfileContext);\n\n  return (\n    <div className=\"btns\">\n      <a\n        target=\"_blank\"\n        href={`${data.html_url}?tab=repositories`}\n        className=\"btn\"\n        rel=\"noreferrer\"\n      >\n        Repositories\n      </a>\n      <a target=\"_blank\" href={data.html_url} className=\"btn\" rel=\"noreferrer\">\n        Visit Profile on Github\n      </a>\n    </div>\n  );\n};\n\nexport default BottomBtns;\n","import \"../scss/WrapperName.scss\";\nconst WrapperName = (prop) => {\n  return <div className={`wrappername ${prop.className}`}>{prop.children}</div>;\n};\n\nexport default WrapperName;\n","import WrapperName from \"./WrapperName\";\nimport { Link } from \"react-router-dom\";\nimport \"../scss/ProfileName.scss\";\nimport { useContext } from \"react\";\nimport { ProfileContext } from \"../App\";\n\nconst ProfileName = () => {\n  const data = useContext(ProfileContext);\n\n  return (\n    <WrapperName className=\"profilename\">\n      <img src={data.avatar_url} alt={data.name} />\n      <div className=\"name\">\n        <h1>{data.name}</h1>\n        <div>\n          <Link to={`/${data.login}/followers`} className=\"follow-info\">\n            Followers {data.followers}\n          </Link>\n          <Link to={`/${data.login}/following`} className=\"follow-info\">\n            Following {data.following}\n          </Link>\n        </div>\n      </div>\n    </WrapperName>\n  );\n};\nexport default ProfileName;\n","import { IconContext } from \"react-icons\";\nimport { ImLocation, ImTwitter, ImLink } from \"react-icons/im\";\nimport { useContext } from \"react\";\nimport { ProfileContext } from \"../../App\";\nimport \"../../scss/social-links.scss\";\nconst SocialLinks = () => {\n  const data = useContext(ProfileContext);\n\n  return (\n    <div className=\"social-links\">\n      <div>\n        <IconContext.Provider value={{ size: \"1.5rem\" }}>\n          <ImLocation />\n        </IconContext.Provider>\n        <div className=\"location\">\n          {data.location === \"\" ? \"Not available\" : data.location}\n        </div>\n      </div>\n\n      <div>\n        <IconContext.Provider value={{ size: \"1.5rem\" }}>\n          <ImTwitter />\n        </IconContext.Provider>\n        <div className=\"twitter\">\n          {/* ES6 Condition to check if the value is empty, in case of empty just normal text \"Not available\" is rendered */}\n          {data.twitter_username !== \"\" ? (\n            <a\n              target=\"_blank\"\n              href={`https://twitter.com/${data.twitter_username}`}\n              rel=\"noreferrer\"\n            >\n              {data.twitter_username}\n            </a>\n          ) : (\n            \"Not available \"\n          )}\n        </div>\n      </div>\n\n      <div>\n        <IconContext.Provider value={{ size: \"1.5rem\" }}>\n          <ImLink />\n        </IconContext.Provider>\n        <div className=\"blog\">\n          {/* ES6 Condition to check if the value is empty, in case of empty just normal text \"Not available\" is rendered */}\n          {data.blog !== \"\" ? (\n            <a target=\"_blank\" href={`${data.blog}`} rel=\"noreferrer\">\n              {data.blog}\n            </a>\n          ) : (\n            \"Not available \"\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SocialLinks;\n","import SocialLinks from \"./SocialLinks\";\nimport { useContext } from \"react\";\nimport { ProfileContext } from \"../../App\";\n\nconst Info = () => {\n  const data = useContext(ProfileContext);\n  return (\n    <div>\n      <div className=\"bio\">{data.bio}</div>\n      <SocialLinks />\n    </div>\n  );\n};\n\nexport default Info;\n","import ProfileName from \"../ProfileName\";\nimport Info from \"./Info\";\n\nconst ProfileData = () => {\n  return (\n    <>\n      <ProfileName />\n      <Info />\n    </>\n  );\n};\n\nexport default ProfileData;\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"../scss/SearchInput.scss\";\n\nconst SearchInput = (props) => {\n  const { user } = useParams();\n  const defaultInput = user === undefined ? \"muhammadumair11\" : user;\n  const [btn, setBtn] = useState(true);\n  const [input, setInput] = useState(defaultInput);\n\n  function handleClick() {\n    props.searchClick(btn, input);\n    setBtn(btn ? false : true);\n  }\n\n  return (\n    <div className=\"searchinput\">\n      <input\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Enter Your Github Username\"\n      />\n\n      <button onClick={handleClick} className=\"btn\">\n        Submit\n      </button>\n    </div>\n  );\n};\n\nSearchInput.propTypes = {\n  searchClick: PropTypes.any,\n};\n\nexport default SearchInput;\n","import PropTypes from \"prop-types\";\nimport BottomBtns from \"./BottomBtns\";\nimport ProfileData from \"./Profile/ProfileData\";\nimport SearchInput from \"./SearchInput\";\n\nconst Profile = (props) => {\n  return (\n    <div className=\"profile\">\n      <SearchInput searchClick={props.profileInputState} />\n      <ProfileData />\n      <BottomBtns />\n    </div>\n  );\n};\nProfile.propTypes = {\n  profileInputState: PropTypes.any,\n};\n\nexport default Profile;\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"../../scss/FollowProfile.scss\";\nimport WrapperName from \"../WrapperName\";\n\nconst FollowProfile = ({ url, name }) => {\n  return (\n    <WrapperName className=\"followname\">\n      <img src={url} alt={name} />\n      <Link to={`/${name}`}>\n        <div className=\"name\">\n          <h1>{name}</h1>\n        </div>\n      </Link>\n    </WrapperName>\n  );\n};\n\nFollowProfile.propTypes = {\n  url: PropTypes.any,\n  name: PropTypes.string,\n};\n\nexport default FollowProfile;\n","import { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport FollowProfile from \"./FollowProfile\";\nimport \"../../scss/list.scss\";\nimport { useContext } from \"react\";\nimport { FollowerContext, FollowingContext, ProfileContext } from \"../../App\";\nimport ProfileName from \"../ProfileName\";\n\nconst List = ({ title }) => {\n  const apiData =\n    title === \"Followers\"\n      ? useContext(FollowerContext)\n      : useContext(FollowingContext);\n  const profileData = useContext(ProfileContext);\n\n  return (\n    <div className=\"followercard\">\n      <ProfileName />\n      <div className=\"followerhead\">\n        <h1>{title}</h1>\n        <Link to={`/${profileData.login}`} className=\"btn link-styles\">\n          Back\n        </Link>\n      </div>\n      <div className=\"List\">\n        {apiData.map((element) => (\n          <FollowProfile\n            key={element.id}\n            url={element.avatar_url}\n            name={element.login}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nList.propTypes = {\n  list: PropTypes.any,\n  title: PropTypes.any,\n  user: PropTypes.any,\n};\n\nexport default List;\n","import PropTypes from \"prop-types\";\nimport List from \"./Follow/List\";\nimport BottomBtns from \"./BottomBtns\";\n\nconst FollowList = (props) => {\n  return (\n    <div className=\"follower\">\n      <List title={props.following === \"true\" ? \"Following\" : \"Followers\"} />\n      <BottomBtns />\n    </div>\n  );\n};\n\nFollowList.propTypes = {\n  following: PropTypes.any,\n};\n\nexport default FollowList;\n","export async function ProfileAPI(input) {\n  const res = await fetch(`https://api.github.com/users/${input}`);\n  const data = await res.json();\n\n  return data;\n}\n","export async function FollowAPI(user, swtich) {\n  const followers = `https://api.github.com/users/${user}/followers`;\n  const following = `https://api.github.com/users/${user}/following`;\n\n  const res = await fetch(swtich === \"following\" ? following : followers);\n  const data = await res.json();\n\n  return data;\n}\n","import Profile from \"./components/Profile\";\nimport FollowList from \"./components/FollowList\";\nimport React, { useEffect, useState } from \"react\";\nimport { ProfileAPI } from \"./API/ProfileAPI\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./scss/App.scss\";\nimport { FollowAPI } from \"./API/FollowAPI\";\n\n//Context Apis Declearation\nexport const ProfileContext = React.createContext();\nexport const FollowerContext = React.createContext();\nexport const FollowingContext = React.createContext();\n\nfunction App() {\n  //State Hook For API data\n  const [apiProfileData, setProfileData] = useState([]);\n  const [apiFollowerData, setFollowerData] = useState([]);\n  const [apiFollowingData, setFollowingData] = useState([]);\n\n  //State Uplifing Data Coming from SearchInput Through Function HandleClick\n  const [input, setInput] = useState(\"muhammadumair11\");\n  const [btn, setBtn] = useState(false);\n\n  function handleClick(btn, input) {\n    setBtn(btn);\n    setInput(input);\n  }\n\n  //Use Effect Executing Api Functions.\n\n  useEffect(() => {\n    // ProfileAPI fetches data from GITHUB API, here it is imported from Seperate Function which is located in API directory\n    ProfileAPI(input)\n      .then((data) => setProfileData(data))\n      .catch((err) => console.error(err));\n\n    // FollowAPI fetches data from GITHUB API, here it is imported from Seperate Function which is located in API directory\n    FollowAPI(input, \"following\")\n      .then((data) => setFollowingData(data))\n      .catch((err) => console.error(err));\n\n    FollowAPI(input, \"followers\")\n      .then((data) => setFollowerData(data))\n      .catch((err) => console.error(err));\n\n    setBtn(false);\n  }, [btn]);\n\n  //React Return JSX With Context APIs as Providers\n\n  return (\n    <ProfileContext.Provider value={apiProfileData}>\n      <FollowerContext.Provider value={apiFollowerData}>\n        <FollowingContext.Provider value={apiFollowingData}>\n          <Router>\n            <Switch>\n              <Route\n                path=\"/:user/following\"\n                component={() => <FollowList following=\"true\" />}\n              />\n              <Route path=\"/:user/followers\" component={FollowList} />\n              <Route path=\"/:user\">\n                <Profile profileInputState={handleClick} />\n              </Route>\n              <Route path=\"/\" exact>\n                <Profile profileInputState={handleClick} />\n              </Route>\n            </Switch>\n          </Router>\n        </FollowingContext.Provider>\n      </FollowerContext.Provider> \n    </ProfileContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}